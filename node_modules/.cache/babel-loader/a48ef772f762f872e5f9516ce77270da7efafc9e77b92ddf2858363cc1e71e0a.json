{"ast":null,"code":"var _jsxFileName = \"/Users/captainchenn/Desktop/3012react/library/my-ts-app/src/components/Dropdown/Dropdown.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dropdown = ({\n  options,\n  disabled\n}) => {\n  _s();\n  const [selectedOption, setSelectedOption] = useState(null);\n  const handleSelect = option => {\n    setSelectedOption(option);\n  };\n  return /*#__PURE__*/_jsxDEV(\"select\", {\n    value: selectedOption || \"\",\n    onChange: e => handleSelect(e.target.value),\n    disabled: disabled,\n    children: [!disabled && /*#__PURE__*/_jsxDEV(\"option\", {\n      value: \"\",\n      disabled: true,\n      children: \"Select an option\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this), options.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n      value: option,\n      children: option\n    }, option, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_s(Dropdown, \"JA8CxE9ZrczvRffCFoauEAbBIYg=\");\n_c = Dropdown;\nexport default Dropdown;\nvar _c;\n$RefreshReg$(_c, \"Dropdown\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Dropdown","options","disabled","_s","selectedOption","setSelectedOption","handleSelect","option","value","onChange","e","target","children","fileName","_jsxFileName","lineNumber","columnNumber","map","_c","$RefreshReg$"],"sources":["/Users/captainchenn/Desktop/3012react/library/my-ts-app/src/components/Dropdown/Dropdown.tsx"],"sourcesContent":["import React, { useState } from \"react\";\n\ninterface DropdownProps {\n  options: string[];\n  disabled?: boolean;\n}\n\nconst Dropdown: React.FC<DropdownProps> = ({ options, disabled }) => {\n  const [selectedOption, setSelectedOption] = useState<string | null>(null);\n\n  const handleSelect = (option: string) => {\n    setSelectedOption(option);\n  };\n\n  return (\n    <select\n      value={selectedOption || \"\"}\n      onChange={(e) => handleSelect(e.target.value)}\n      disabled={disabled}\n    >\n      {!disabled && (\n        <option value=\"\" disabled>\n          Select an option\n        </option>\n      )}\n      {options.map((option) => (\n        <option key={option} value={option}>\n          {option}\n        </option>\n      ))}\n    </select>\n  );\n};\n\nexport default Dropdown;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAOxC,MAAMC,QAAiC,GAAGA,CAAC;EAAEC,OAAO;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACnE,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGR,QAAQ,CAAgB,IAAI,CAAC;EAEzE,MAAMS,YAAY,GAAIC,MAAc,IAAK;IACvCF,iBAAiB,CAACE,MAAM,CAAC;EAC3B,CAAC;EAED,oBACER,OAAA;IACES,KAAK,EAAEJ,cAAc,IAAI,EAAG;IAC5BK,QAAQ,EAAGC,CAAC,IAAKJ,YAAY,CAACI,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;IAC9CN,QAAQ,EAAEA,QAAS;IAAAU,QAAA,GAElB,CAACV,QAAQ,iBACRH,OAAA;MAAQS,KAAK,EAAC,EAAE;MAACN,QAAQ;MAAAU,QAAA,EAAC;IAE1B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CACT,EACAf,OAAO,CAACgB,GAAG,CAAEV,MAAM,iBAClBR,OAAA;MAAqBS,KAAK,EAAED,MAAO;MAAAK,QAAA,EAChCL;IAAM,GADIA,MAAM;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEX,CACT,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAEb,CAAC;AAACb,EAAA,CAzBIH,QAAiC;AAAAkB,EAAA,GAAjClB,QAAiC;AA2BvC,eAAeA,QAAQ;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}