{"version":3,"file":"components-Dropdown-Dropdown-stories.iframe.bundle.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtDA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAAA;AAGA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAzBA;AA2BA;AAAA;AAAA","sources":["webpack://my-ts-app/.","webpack://my-ts-app/./src/components/Dropdown/Dropdown.tsx"],"sourcesContent":[null,"import React, { useState } from \"react\";\n\ninterface DropdownProps {\n  options: string[];\n  disabled?: boolean;\n}\n\nconst Dropdown: React.FC<DropdownProps> = ({ options, disabled }) => {\n  const [selectedOption, setSelectedOption] = useState<string | null>(null);\n\n  const handleSelect = (option: string) => {\n    setSelectedOption(option);\n  };\n\n  return (\n    <select\n      value={selectedOption || \"\"}\n      onChange={(e) => handleSelect(e.target.value)}\n      disabled={disabled}\n    >\n      {!disabled && (\n        <option value=\"\" disabled>\n          Select an option\n        </option>\n      )}\n      {options.map((option) => (\n        <option key={option} value={option}>\n          {option}\n        </option>\n      ))}\n    </select>\n  );\n};\n\nexport default Dropdown;\n"],"names":[],"sourceRoot":""}